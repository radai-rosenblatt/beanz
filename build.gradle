    /*
 * Copyright 2017 Radai Rosenblat
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

plugins {
    id "com.jfrog.bintray" version "1.7.3"
    id "org.sonarqube" version "2.5"
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'

group = "net.radai"

repositories {
    jcenter()
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:all"
}

compileTestJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:all"
}

task sourceJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3'
    distributionType = 'ALL'
}

artifacts {
    archives sourceJar
    archives javadocJar
}

dependencies {
    compile 'org.apache.commons:commons-lang3:3.6'

    testCompile 'junit:junit:4.12'
}

jacoco {
    toolVersion = "0.7.9"
}

publishing {
    publications {
        beanz(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['beanz']
    publish = true
    pkg {
        repo = 'beanz'
        name = rootProject.name
        licenses = ['BSD 2-Clause']
        vcsUrl = 'https://github.com/radai-rosenblatt/beanz.git'
        version {
            name = project.version
        }
    }
}
